import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import {useState } from "react";
import { ITranslation } from "../interfaces/ITranslations";
import styles from "../styles/Home.module.css";
interface Prop {
  translations: Array<ITranslation>;
}
const Home: NextPage<Prop> = (props: Prop) => {
  const { translations } = props;
  const [translation,setTranslation]=useState<string>("valera")
  const handlerSearch=()=>{
    console.log(translation);

  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Scripture</title>
        <meta name="description" content="Generated by Scripture" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="">Scripture</a>
        </h1>
        <select value={translation} onChange={(e)=>{
          console.log(e.target.value);
          setTranslation(e.target.value);
          }}>
           {translations.map(x=>
           <option value={x.abbreviation} key={x.hash}>{  x.abbreviation}-{x.language}</option>

            )}
      </select>
        <section className={styles.searchContainer}>
          <input
            type="text"
            className={styles.inputSearch}
            placeholder="Jhon 14:1-16"
          />
          <button className={styles.searchButton} onClick={handlerSearch}>Search</button>
        </section>
      </main>


      <footer className={styles.footer}>
        <a
          href="https://github.com/virgerick"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by virgerick
          {/* <Image src="/profile.jpg" alt="Vercel Logo" width={100} height={100} className="logo" /> */}
        </a>
      </footer>
    </div>
  );
};
export default Home;
export async function getServerSideProps(context: any) {
  const result = await fetch(
    "https://thescripture.vercel.app/api/translations"
  );
  let translations: Array<ITranslation> = await result.json();
  return {
    props: { translations }, // will be passed to the page component as props
  };
}
